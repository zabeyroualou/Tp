/*
 * This file is generated by jOOQ.
 */
package models.cegib.compta.matieres.tables.daos;


import java.math.BigDecimal;
import java.util.List;
import java.util.Optional;

import models.cegib.compta.matieres.tables.Produits;
import models.cegib.compta.matieres.tables.records.ProduitsRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ProduitsDao extends DAOImpl<ProduitsRecord, models.cegib.compta.matieres.tables.pojos.Produits, Long> {

    /**
     * Create a new ProduitsDao without any configuration
     */
    public ProduitsDao() {
        super(Produits.PRODUITS, models.cegib.compta.matieres.tables.pojos.Produits.class);
    }

    /**
     * Create a new ProduitsDao with an attached configuration
     */
    @Autowired
    public ProduitsDao(Configuration configuration) {
        super(Produits.PRODUITS, models.cegib.compta.matieres.tables.pojos.Produits.class, configuration);
    }

    @Override
    public Long getId(models.cegib.compta.matieres.tables.pojos.Produits object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Produits.PRODUITS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchById(Long... values) {
        return fetch(Produits.PRODUITS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public models.cegib.compta.matieres.tables.pojos.Produits fetchOneById(Long value) {
        return fetchOne(Produits.PRODUITS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<models.cegib.compta.matieres.tables.pojos.Produits> fetchOptionalById(Long value) {
        return fetchOptional(Produits.PRODUITS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Produits.PRODUITS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchByName(String... values) {
        return fetch(Produits.PRODUITS.NAME, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Produits.PRODUITS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchByDescription(String... values) {
        return fetch(Produits.PRODUITS.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>quantite BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchRangeOfQuantite(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Produits.PRODUITS.QUANTITE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>quantite IN (values)</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchByQuantite(BigDecimal... values) {
        return fetch(Produits.PRODUITS.QUANTITE, values);
    }

    /**
     * Fetch records that have <code>categorie BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchRangeOfCategorie(String lowerInclusive, String upperInclusive) {
        return fetchRange(Produits.PRODUITS.CATEGORIE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>categorie IN (values)</code>
     */
    public List<models.cegib.compta.matieres.tables.pojos.Produits> fetchByCategorie(String... values) {
        return fetch(Produits.PRODUITS.CATEGORIE, values);
    }
}
